{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters":{},
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "soc-bucket-sync",
            "location": "eastus",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "topic": {
                                                "type": "string"
                                            },
                                            "subject": {
                                                "type": "string"
                                            },
                                            "eventType": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "data": {
                                                "type": "object",
                                                "properties": {
                                                    "api": {
                                                        "type": "string"
                                                    },
                                                    "clientRequestId": {
                                                        "type": "string"
                                                    },
                                                    "requestId": {
                                                        "type": "string"
                                                    },
                                                    "eTag": {
                                                        "type": "string"
                                                    },
                                                    "contentType": {
                                                        "type": "string"
                                                    },
                                                    "contentLength": {
                                                        "type": "integer"
                                                    },
                                                    "blobType": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    },
                                                    "sequencer": {
                                                        "type": "string"
                                                    },
                                                    "storageDiagnostics": {
                                                        "type": "object",
                                                        "properties": {
                                                            "batchId": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dataVersion": {
                                                "type": "string"
                                            },
                                            "metadataVersion": {
                                                "type": "string"
                                            },
                                            "eventTime": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "topic",
                                            "subject",
                                            "eventType",
                                            "id",
                                            "data",
                                            "dataVersion",
                                            "metadataVersion",
                                            "eventTime"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@triggerOutputs()?['body']",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Set_variable": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "url",
                                                "value": "@{slice(item()?['data']?['url'], 0,lastIndexOf(item()?['data']?['url'], '/'))}"
                                            }
                                        },
                                        "Set_variable_1": {
                                            "runAfter": {
                                                "Set_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "folder",
                                                "value": "@{slice(variables('url'), lastIndexOf(item()?['data']?['url'], '/sentinel-cases/'))}"
                                            }
                                        },
                                        "Get_blob_content_(V2)": {
                                            "runAfter": {
                                                "Set_variable_1": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('socevidencedemo'))}/files/@{encodeURIComponent(encodeURIComponent(variables('folder'),'/arm.txt'))}/content",
                                                "queries": {
                                                    "inferContentType": true
                                                }
                                            }
                                        },
                                        "Set_variable_2": {
                                            "runAfter": {
                                                "Get_blob_content_(V2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "armid",
                                                "value": "@{body('Get_blob_content_(V2)')}"
                                            }
                                        },
                                        "Add_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Set_variable_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "incidentArmId": "@variables('armid')",
                                                    "message": "<p>The data file @{item()?['data']?['url']} was added to the evidence storage container for this case. </p>"
                                                },
                                                "path": "/Incidents/Comment"
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "endsWith": [
                                                        "@item()?['subject']",
                                                        "/arm.txt"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "url",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_1": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "folder",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_variable_1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "armid",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/eastus/managedApis/azureblob')]",
                                "connectionId": "[concat('/subscriptions/', subscription().subscriptionId, '/replaceme')]",
                                "connectionName": "azureblob-4",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuresentinel": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/eastus/managedApis/azuresentinel')]",
                                "connectionId": "[concat('/subscriptions/', subscription().subscriptionId, '/replaceme')]",
                                "connectionName": "azuresentinel-dev-incident-enrich",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}